pipeline {
    agent {
        node {
            label 'master'
            customWorkspace '/var/lib/jenkins/workspace/terraform/infra_create/terraform_infra/terraform_infra'
        }
    }

    stages {
        stage('Initiating Terraform') {
            steps {
                sh 'terraform init'
            }
        }
        stage('Terraform Destroy') {
            input {
                message '!! WARNING: Running this stage will destroy your Infra. Do you still approve?  '
                ok 'Approve'
                parameters {
                    choice choices: ['yes', 'no'], name: 'CHOICE'
                }
            }
            when { 
                environment name: 'CHOICE', value: 'yes' 
            }
            steps {
                sh 'terraform destroy -auto-approve'
            }
        }
    }
    post {
        success {
            slackSend channel: 'group-connect', message: 'Terraform job ran successfully: Infrastructure Destroyed', tokenCredentialId: 'ac0d36dc-5340-4e86-8acc-d6603b833281'
        }
        failure {
            slackSend channel: 'group-connect', message: '***** ERROR ****** : Terraform job failed: Destroy operation failed', tokenCredentialId: 'ac0d36dc-5340-4e86-8acc-d6603b833281'
        }
        aborted {
            slackSend channel: 'group-connect', message: 'Oops !!!!!!! made a mistake :: Aborting.......', tokenCredentialId: 'ac0d36dc-5340-4e86-8acc-d6603b833281'
        }
        unstable {
            slackSend channel: 'group-connect', message: 'Info :: Terraform job is unstable :: Check code for error', tokenCredentialId: 'ac0d36dc-5340-4e86-8acc-d6603b833281'
        }
    }
}